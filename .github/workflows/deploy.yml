name: Deploy Backoffice to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build React app
      env:
        VITE_API_DOMAIN: ${{ vars.VITE_API_DOMAIN }}
        VITE_BASE_PATH: ${{ vars.VITE_BASE_PATH }}
        VITE_GOOGLE_MAPS_API_KEY: ${{ vars.VITE_GOOGLE_MAPS_API_KEY }}
      run: npm run build

    - name: Setup SSH key
      run: |
        mkdir -p ~/.ssh && chmod 700 ~/.ssh
        printf '%s\n' "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -p ${{ secrets.EC2_PORT }} ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to server
      run: |
        # Create deployment package
        tar -czf backoffice-deployment.tar.gz -C dist .

        # Upload to server
        scp -P ${{ secrets.EC2_PORT }} backoffice-deployment.tar.gz ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:~/
        
        # Deploy on server
        ssh -p ${{ secrets.EC2_PORT }} ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << 'EOF'
          # Navigate to deployment directory
          cd ~/htdocs/backoffice.qualiflex.com.br
          
          # Backup existing files (exclude backup folder itself)
          if [ "$(ls -A . 2>/dev/null | grep -v '^backup$' | wc -l)" -gt 0 ]; then
            echo "📦 Creating backup..."
            rm -rf backup
            mkdir -p backup
            find . -maxdepth 1 -not -name '.' -not -name 'backup' -exec mv {} backup/ \;
          fi
          
          # Extract new deployment directly to root
          echo "🚀 Deploying new files..."
          tar -xzf ~/backoffice-deployment.tar.gz
          
          # Clean up
          rm ~/backoffice-deployment.tar.gz
          echo "✅ Backoffice deployment completed successfully"
        EOF

    - name: Verify deployment
      run: |
        ssh -p ${{ secrets.EC2_PORT }} ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << 'EOF'
          cd ~/htdocs/backoffice.qualiflex.com.br
          echo "🔍 Deployment verification:"
          echo "📁 Files in deployment directory:"
          ls -la | grep -v '^total' | head -10
          echo ""
          echo "📊 Deployment size:"
          du -sh . --exclude=backup
          echo ""
          echo "✅ index.html exists:" 
          [ -f "index.html" ] && echo "Yes" || echo "No"
        EOF